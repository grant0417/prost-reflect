on:
  push:
    branches:
      - use-prost-time-parsing
  pull_request:
    branches:
      - main

name: Continuous integration

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [beta, stable, 1.54.0]
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest
      - uses: actions-rs/cargo@v1
        with:
          command: test

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          components: clippy, rustfmt
          override: true
      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all -- -D warnings
      - name: Check README.md is up-to-date
        shell: pwsh
        run: |
          ./generate-readme.ps1
          if (git diff README.md) {
            Write-Error "README.md is out-of-date, run generate-readme.ps1 to regenerate it." -ErrorAction Stop
          }

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    container:
      image: xd009642/tarpaulin:develop
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v2
      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest
      - name: Generate code coverage
        run: |
          cargo tarpaulin --verbose --packages prost-reflect prost-reflect-tests --all-features --timeout 120 --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
